# Award-Winning Development Team Agents - Environment Configuration
# Copy this file to .env and fill in your actual API keys and tokens

# =============================================================================
# CORE MCP SERVER CONFIGURATION
# =============================================================================

# GitHub Integration (Required for version control and CI/CD workflows)
# Get your token at: https://github.com/settings/tokens
# Required scopes: repo, workflow, write:packages
GITHUB_PAT="your_github_personal_access_token_here"

# Figma Integration (Required for design system work)
# Get your token at: https://www.figma.com/developers/api#access-tokens
FIGMA_TOKEN="your_figma_api_token_here"

# =============================================================================
# TEAM COLLABORATION MCP SERVERS
# =============================================================================

# Slack Integration (Required for team communication automation)
# Create a Slack app at: https://api.slack.com/apps
# Required scopes: chat:write, files:read, users:read
SLACK_BOT_TOKEN="xoxb-your-slack-bot-token-here"
SLACK_SIGNING_SECRET="your_slack_signing_secret_here"

# Linear Integration (Required for project management)
# Get your API key at: https://linear.app/settings/api
LINEAR_API_KEY="your_linear_api_key_here"

# =============================================================================
# MONITORING & QUALITY MCP SERVERS
# =============================================================================

# Sentry Integration (Required for error monitoring and debugging)
# Get your token at: https://sentry.io/settings/account/api/auth-tokens/
SENTRY_AUTH_TOKEN="your_sentry_auth_token_here"
SENTRY_ORG_SLUG="your_sentry_organization_slug"

# =============================================================================
# DEVELOPMENT & API MCP SERVERS
# =============================================================================

# Apidog Integration (Optional - for API documentation and testing)
# Get your API key from your Apidog account settings
APIDOG_API_KEY="your_apidog_api_key_here"

# =============================================================================
# BACKEND SERVICE CONFIGURATION (Optional)
# =============================================================================

# Firebase Configuration (For Firebase-based projects)
FIREBASE_PROJECT_ID="your_firebase_project_id"
FIREBASE_PRIVATE_KEY="your_firebase_private_key"
FIREBASE_CLIENT_EMAIL="your_firebase_client_email"

# =============================================================================
# DEVELOPMENT ENVIRONMENT SETTINGS
# =============================================================================

# Claude Code Configuration
CLAUDE_API_KEY="your_anthropic_api_key"

# Development Environment
NODE_ENV="development"
DEBUG="true"

# =============================================================================
# QUICK SETUP INSTRUCTIONS
# =============================================================================

# 1. Copy this file: cp .env.example .env
# 2. Fill in the required API keys and tokens above
# 3. Run: claude --doctor to verify configuration
# 4. Test with: claude "Hello! Which agents are available?"

# =============================================================================
# PRIORITY SETUP ORDER
# =============================================================================

# ESSENTIAL (Required for core functionality):
# - GITHUB_PAT: Version control and development workflows
# - SLACK_BOT_TOKEN + SLACK_SIGNING_SECRET: Team coordination

# IMPORTANT (Highly recommended):
# - FIGMA_TOKEN: Design system integration
# - LINEAR_API_KEY: Project management and tracking
# - SENTRY_AUTH_TOKEN + SENTRY_ORG_SLUG: Error monitoring

# OPTIONAL (Enhanced functionality):
# - APIDOG_API_KEY: API documentation and testing
# - FIREBASE_*: For Firebase-based backend projects

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit .env file to version control
# - Use different tokens for development vs production
# - Regularly rotate API keys and tokens
# - Follow principle of least privilege for token scopes
# - Monitor token usage and access logs

# =============================================================================
# TROUBLESHOOTING
# =============================================================================

# If you see MCP server warnings:
# 1. Verify all required environment variables are set
# 2. Check that API keys have correct permissions/scopes
# 3. Test individual services before using with Claude Code
# 4. Run 'claude --doctor' for detailed diagnostics

# Common issues:
# - GitHub PAT missing 'repo' scope
# - Slack bot token vs user token confusion
# - Figma token from wrong account or team
# - Linear API key from wrong workspace
# - Sentry token with insufficient permissions